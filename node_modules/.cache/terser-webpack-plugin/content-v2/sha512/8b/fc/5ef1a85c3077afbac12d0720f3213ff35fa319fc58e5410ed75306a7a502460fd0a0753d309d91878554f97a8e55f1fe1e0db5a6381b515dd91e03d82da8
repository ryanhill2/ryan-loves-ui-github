{"map":"{\"version\":3,\"sources\":[\"/home/ryan/development/ryan-loves-ui-github/src/components/LoveWebsite.js\",\"/home/ryan/development/ryan-loves-ui-github/src/components/Quiz.js\",\"/home/ryan/development/ryan-loves-ui-github/src/App.js\",\"/home/ryan/development/ryan-loves-ui-github/src/reportWebVitals.js\",\"/home/ryan/development/ryan-loves-ui-github/src/index.js\"],\"names\":[\"LoveWebsite\",\"dublinTime\",\"setDublinTime\",\"useState\",\"melbourneTime\",\"setMelbourneTime\",\"dublinDay\",\"setDublinDay\",\"melbourneDay\",\"setMelbourneDay\",\"useEffect\",\"fetchTime\",\"dublinNow\",\"moment\",\"tz\",\"melbourneNow\",\"dublinTimeNow\",\"format\",\"melbourneTimeNow\",\"dublinDayNow\",\"melbourneDayNow\",\"interval\",\"setInterval\",\"clearInterval\",\"React\",\"createElement\",\"className\",\"Quiz\",\"questions\",\"question\",\"options\",\"answer\",\"currentQuestion\",\"setCurrentQuestion\",\"score\",\"setScore\",\"showScore\",\"setShowScore\",\"length\",\"map\",\"option\",\"index\",\"key\",\"onClick\",\"selectedOption\",\"nextQuestion\",\"handleAnswerOptionClick\",\"App\",\"showQuiz\",\"setShowQuiz\",\"handleStartQuiz\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"e\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\nimport moment from 'moment-timezone';\\n\\n// Replace these with your actual image URLs\\nconst yourImageUrl = 'path/to/your/image.jpg';\\nconst herImageUrl = 'path/to/her/image.jpg';\\n\\nconst LoveWebsite = () => {\\n    const [dublinTime, setDublinTime] = useState('');\\n    const [melbourneTime, setMelbourneTime] = useState('');\\n    const [dublinDay, setDublinDay] = useState('');\\n    const [melbourneDay, setMelbourneDay] = useState('');\\n\\n    useEffect(() => {\\n        // Function to fetch and set the current time and day in both time zones\\n        const fetchTime = () => {\\n            const dublinNow = moment().tz('Europe/Sligo');\\n            const melbourneNow = moment().tz('Australia/Melbourne');\\n\\n            const dublinTimeNow = dublinNow.format('HH:mm');\\n            const melbourneTimeNow = melbourneNow.format('HH:mm');\\n\\n            const dublinDayNow = dublinNow.format('dddd');\\n            const melbourneDayNow = melbourneNow.format('dddd');\\n\\n            setDublinTime(dublinTimeNow);\\n            setMelbourneTime(melbourneTimeNow);\\n            setDublinDay(dublinDayNow);\\n            setMelbourneDay(melbourneDayNow);\\n        };\\n\\n        // Fetch the time initially\\n        fetchTime();\\n\\n        // Update the time every minute\\n        const interval = setInterval(fetchTime, 60000); // Update every minute\\n\\n        // Clean up interval on component unmount\\n        return () => clearInterval(interval);\\n    }, []);\\n\\nreturn (\\n        <div>\\n            <div className=\\\"image-container\\\">\\n                <div>\\n                    <h2>Hubby</h2>\\n                    <p>\\n                        Current Time in Dublin, Ireland: {dublinTime} <br />\\n                        Current Day: {dublinDay}\\n                    </p>\\n                </div>\\n                <div>\\n                    <h2>Wifey</h2>\\n                    <p>\\n                        Current Time in Melbourne, Australia: {melbourneTime} <br />\\n                        Current Day: {melbourneDay}\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    );\\n};\\n\\nexport default LoveWebsite;\\n\",\"// src/components/Quiz.js\\nimport React, { useState } from 'react';\\n\\nconst Quiz = () => {\\n    const questions = [\\n        {\\n            question: 'What is Ryan\\\\'s favorite color?',\\n            options: ['Red', 'Blue', 'Green', 'Purple'],\\n            answer: 'Red'\\n        },\\n        {\\n            question: 'Where did you first meet?',\\n            options: ['School', 'Work', 'Party', 'Online'],\\n            answer: 'Work'\\n        },\\n        {\\n            question: 'What is Ryan\\\\'s favorite physical thing about you?',\\n            options: ['Eyes', 'Butt', 'Smile', 'Legs'],\\n            answer: 'Butt'\\n        },\\n        {\\n            question: 'What is Ryan\\\\'s favorite non physical thing about you?',\\n            options: ['Your Money', 'Your Location', 'Your Kindness', 'Your Confidence'],\\n            answer: 'Your Kindness'\\n        },\\n        {\\n            question: 'What is Ryan\\\\'s favorite thing to eat?',\\n            options: ['Pizza', 'Chicken', 'Curry', 'You!'],\\n            answer: 'Chicken'\\n        },\\n        // Add more questions here\\n    ];\\n\\n    const [currentQuestion, setCurrentQuestion] = useState(0);\\n    const [score, setScore] = useState(0);\\n    const [showScore, setShowScore] = useState(false);\\n\\n    const handleAnswerOptionClick = (selectedOption) => {\\n        if (selectedOption === questions[currentQuestion].answer) {\\n            setScore(score + 1);\\n        }\\n\\n        const nextQuestion = currentQuestion + 1;\\n        if (nextQuestion < questions.length) {\\n            setCurrentQuestion(nextQuestion);\\n        } else {\\n            setShowScore(true);\\n        }\\n    };\\n\\n    return (\\n        <div className=\\\"quiz\\\">\\n            {showScore ? (\\n                <div className=\\\"score-section\\\">\\n                    You scored {score} out of {questions.length}\\n                </div>\\n            ) : (\\n                <div>\\n                    <div className=\\\"question-section\\\">\\n                        <div className=\\\"question-count\\\">\\n                            <span>Question {currentQuestion + 1}</span>/{questions.length}\\n                        </div>\\n                        <div className=\\\"question-text\\\">{questions[currentQuestion].question}</div>\\n                    </div>\\n                    <div className=\\\"answer-section\\\">\\n                        {questions[currentQuestion].options.map((option, index) => (\\n                            <button key={index} onClick={() => handleAnswerOptionClick(option)}>\\n                                {option}\\n                            </button>\\n                        ))}\\n                    </div>\\n                </div>\\n            )}\\n        </div>\\n    );\\n};\\n\\nexport default Quiz;\\n\",\"import React, { useState } from 'react';\\nimport './App.css';\\nimport LoveWebsite from './components/LoveWebsite';\\nimport Quiz from './components/Quiz';\\n\\n\\nfunction App() {\\n    const [showQuiz, setShowQuiz] = useState(false);\\n\\n    const handleStartQuiz = () => {\\n        setShowQuiz(true);\\n    };\\n\\n    return (\\n        <div className=\\\"App\\\">\\n            <header className=\\\"App-header\\\">\\n                <h1>Welcome to Raz</h1>\\n            </header>\\n            <LoveWebsite />\\n            <div>\\n                {!showQuiz ? (\\n                    <button onClick={handleStartQuiz}>Start Quiz</button>\\n                ) : (\\n                    <Quiz />\\n                )}\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default App;\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},19:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),l=n(4),o=n.n(l),s=(n(14),n(15),n(1)),c=n.n(s);var u=()=>{const[e,t]=Object(a.useState)(\"\"),[n,l]=Object(a.useState)(\"\"),[o,s]=Object(a.useState)(\"\"),[u,i]=Object(a.useState)(\"\");return Object(a.useEffect)(()=>{const e=()=>{const e=c()().tz(\"Europe/Sligo\"),n=c()().tz(\"Australia/Melbourne\"),a=e.format(\"HH:mm\"),r=n.format(\"HH:mm\"),o=e.format(\"dddd\"),u=n.format(\"dddd\");t(a),l(r),s(o),i(u)};e();const n=setInterval(e,6e4);return()=>clearInterval(n)},[]),r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"image-container\"},r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"Hubby\"),r.a.createElement(\"p\",null,\"Current Time in Dublin, Ireland: \",e,\" \",r.a.createElement(\"br\",null),\"Current Day: \",o)),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"Wifey\"),r.a.createElement(\"p\",null,\"Current Time in Melbourne, Australia: \",n,\" \",r.a.createElement(\"br\",null),\"Current Day: \",u))))};var i=()=>{const e=[{question:\"What is Ryan's favorite color?\",options:[\"Red\",\"Blue\",\"Green\",\"Purple\"],answer:\"Red\"},{question:\"Where did you first meet?\",options:[\"School\",\"Work\",\"Party\",\"Online\"],answer:\"Work\"},{question:\"What is Ryan's favorite physical thing about you?\",options:[\"Eyes\",\"Butt\",\"Smile\",\"Legs\"],answer:\"Butt\"},{question:\"What is Ryan's favorite non physical thing about you?\",options:[\"Your Money\",\"Your Location\",\"Your Kindness\",\"Your Confidence\"],answer:\"Your Kindness\"},{question:\"What is Ryan's favorite thing to eat?\",options:[\"Pizza\",\"Chicken\",\"Curry\",\"You!\"],answer:\"Chicken\"}],[t,n]=Object(a.useState)(0),[l,o]=Object(a.useState)(0),[s,c]=Object(a.useState)(!1);return r.a.createElement(\"div\",{className:\"quiz\"},s?r.a.createElement(\"div\",{className:\"score-section\"},\"You scored \",l,\" out of \",e.length):r.a.createElement(\"div\",null,r.a.createElement(\"div\",{className:\"question-section\"},r.a.createElement(\"div\",{className:\"question-count\"},r.a.createElement(\"span\",null,\"Question \",t+1),\"/\",e.length),r.a.createElement(\"div\",{className:\"question-text\"},e[t].question)),r.a.createElement(\"div\",{className:\"answer-section\"},e[t].options.map((a,s)=>r.a.createElement(\"button\",{key:s,onClick:()=>(a=>{a===e[t].answer&&o(l+1);const r=t+1;r<e.length?n(r):c(!0)})(a)},a)))))};var m=function(){const[e,t]=Object(a.useState)(!1);return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"header\",{className:\"App-header\"},r.a.createElement(\"h1\",null,\"Welcome to Raz\")),r.a.createElement(u,null),r.a.createElement(\"div\",null,e?r.a.createElement(i,null):r.a.createElement(\"button\",{onClick:()=>{t(!0)}},\"Start Quiz\")))};var d=e=>{e&&e instanceof Function&&n.e(3).then(n.bind(null,20)).then(t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:l,getTTFB:o}=t;n(e),a(e),r(e),l(e),o(e)})};o.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(m,null))),d()},5:function(e,t,n){e.exports=n(19)}},[[5,1,2]]]);","extractedComments":[]}